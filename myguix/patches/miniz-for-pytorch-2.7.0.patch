diff --git a/miniz.h b/miniz.h
index 9fcfffc..fa3fec8 100644
--- a/miniz.h
+++ b/miniz.h
@@ -126,7 +126,7 @@
 /* If MINIZ_NO_TIME is specified then the ZIP archive functions will not be able to get the current time, or */
 /* get/set file times, and the C run-time funcs that get/set times won't be called. */
 /* The current downside is the times written to your archives will be from 1979. */
-/*#define MINIZ_NO_TIME */
+#define MINIZ_NO_TIME
 
 /* Define MINIZ_NO_DEFLATE_APIS to disable all compression API's. */
 /*#define MINIZ_NO_DEFLATE_APIS */
@@ -144,7 +144,7 @@
 /*#define MINIZ_NO_ZLIB_APIS */
 
 /* Define MINIZ_NO_ZLIB_COMPATIBLE_NAME to disable zlib names, to prevent conflicts against stock zlib. */
-/*#define MINIZ_NO_ZLIB_COMPATIBLE_NAMES */
+#define MINIZ_NO_ZLIB_COMPATIBLE_NAMES
 
 /* Define MINIZ_NO_MALLOC to disable all calls to malloc, free, and realloc. 
    Note if MINIZ_NO_MALLOC is defined then the user must always provide custom user alloc/free/realloc
@@ -212,7 +212,6 @@
 #if MINIZ_X86_OR_X64_CPU
 /* Set MINIZ_USE_UNALIGNED_LOADS_AND_STORES to 1 on CPU's that permit efficient integer loads and stores from unaligned addresses. */
 #define MINIZ_USE_UNALIGNED_LOADS_AND_STORES 0
-#define MINIZ_UNALIGNED_USE_MEMCPY
 #else
 #define MINIZ_USE_UNALIGNED_LOADS_AND_STORES 0
 #endif
@@ -1074,7 +1073,8 @@ typedef enum {
     MZ_ZIP_FLAG_ASCII_FILENAME = 0x10000,
     /*After adding a compressed file, seek back
     to local file header and set the correct sizes*/
-    MZ_ZIP_FLAG_WRITE_HEADER_SET_SIZE = 0x20000
+    MZ_ZIP_FLAG_WRITE_HEADER_SET_SIZE = 0x20000,
+    MZ_ZIP_FLAG_DO_NOT_COMPUTE_CRC32 = 0x80000
 } mz_zip_flags;
 
 typedef enum {
@@ -1124,7 +1124,7 @@ typedef enum {
     MZ_ZIP_TOTAL_ERRORS
 } mz_zip_error;
 
-typedef struct
+typedef struct mz_zip_archive
 {
     mz_uint64 m_archive_size;
     mz_uint64 m_central_directory_file_ofs;
